name: Minikube Setup, Helm Installation, and Deployment

on:
  workflow_call:
    inputs:
      namespace:
        description: "Kubernetes namespace to deploy to"
        required: true
        type: string
    secrets:
      HELM_COMMAND:
        description: "Full Helm command to execute (with secrets already resolved)"
        required: true
      VPS_SSH_PRIVATE_KEY:
        description: "SSH private key for VPS access"
        required: true
      VPS_HOST:
        description: "IP address or hostname of the VPS"
        required: true
      VPS_USER:
        description: "Username for SSH access to VPS"
        required: true

jobs:
  setup-minikube-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Minikube on VPS
        env:
          SSH_PRIVATE_KEY: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_USER: ${{ secrets.VPS_USER }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${VPS_USER}@${VPS_HOST} << 'EOF'
            set -e
            
            # Check and install Minikube
            if ! command -v minikube &> /dev/null; then
              echo "Installing Minikube..."
              curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
              sudo install minikube-linux-amd64 /usr/local/bin/minikube
            fi
            
            # Start Minikube if not running
            if ! minikube status &> /dev/null; then
              minikube start --driver=docker --force
            fi
            
            # Install kubectl if not present
            if ! command -v kubectl &> /dev/null; then
              echo "Installing kubectl..."
              curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
              sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
            fi
            
            # Install Helm if not present
            if ! command -v helm &> /dev/null; then
              echo "Installing Helm..."
              curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
              chmod 700 get_helm.sh
              ./get_helm.sh
            fi
            
            # Verify setup
            minikube status
            kubectl get nodes
            helm version
          EOF

      - name: Deploy with Helm
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_USER: ${{ secrets.VPS_USER }}
          HELM_COMMAND: ${{ secrets.helm_command }}
          NAMESPACE: ${{ inputs.namespace }}
        run: |
          echo "${HELM_COMMAND}"
          ssh -o StrictHostKeyChecking=no -i private_key ${VPS_USER}@${VPS_HOST} << EOF
            set -e

            # Create namespace if it doesn't exist
            kubectl create namespace ${NAMESPACE} --dry-run=client -o yaml | kubectl apply -f -

            # Debug output
            echo "Executing Helm command:"
            echo "${HELM_COMMAND}"

            # Execute the provided Helm command
            ${HELM_COMMAND}

            # Verify deployment
            echo "Pods in namespace ${NAMESPACE}:"
            kubectl get pods -n ${NAMESPACE}
            echo "Services in namespace ${NAMESPACE}:"
            kubectl get services -n ${NAMESPACE}
          EOF